name: Build & Deploy

on:
  push:
    branches:
      - main

defaults:
  run:
    working-directory: ./mcucen/todo-rest-api

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v2

      - name: Set up PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: 8.3

      - name: Install Dependencies
        run: composer install --no-interaction --prefer-dist

      - name: Copy Environment File
        run: cp .env.example .env

      - name: Generate Application Key
        run: php artisan key:generate

      - name: Directory Permissions
        run: chmod -R 777 storage bootstrap/cache

      - name: Create Database
        run: |
          mkdir -p database
          touch database/database.sqlite

      - name: Database Environment
        run: echo "DB_CONNECTION=sqlite" > .env

      - name: Run migrations
        run: php artisan migrate --force

#      - name: Cache vendor folder
#        uses: actions/cache@v2
#        with:
#          path: |
#            vendor
#          key: ${{ runner.os }}-php-${{ hashFiles('**/composer.lock') }}
#          restore-keys: |
#            ${{ runner.os }}-php-
#
#      - name: Cache SQLite Database
#        uses: actions/cache@v2
#        with:
#          path: |
#            database.sqlite
#          key: ${{ runner.os }}-sqlite-${{ hashFiles('**/database.sqlite') }}
#          restore-keys: |
#            ${{ runner.os }}-sqlite-
#
#      - name: Cache .env file
#        uses: actions/cache@v2
#        with:
#          path: |
#            .env
#          key: ${{ runner.os }}-env-${{ hashFiles('**/.env') }}
#          restore-keys: |
#            ${{ runner.os }}-env-

  test:
    runs-on: ubuntu-latest

    needs: build

    steps:
#      - name: Checkout Repository
#        uses: actions/checkout@v2
#
#      - name: Set up PHP
#        uses: shivammathur/setup-php@v2
#        with:
#          php-version: 8.3
#
#      - name: Restore Cached vendor folder
#        uses: actions/cache@v2
#        with:
#          path: |
#            vendor
#          key: ${{ runner.os }}-php-${{ hashFiles('**/composer.lock') }}
#          restore-keys: |
#            ${{ runner.os }}-php-
#
#      - name: Restore Cached SQLite Database
#        uses: actions/cache@v2
#        with:
#          path: |
#            database.sqlite
#          key: ${{ runner.os }}-sqlite-${{ hashFiles('**/database.sqlite') }}
#          restore-keys: |
#            ${{ runner.os }}-sqlite-
#
#      - name: Restore Cached .env file
#        uses: actions/cache@v2
#        with:
#          path: |
#            .env
#          key: ${{ runner.os }}-env-${{ hashFiles('**/.env') }}
#          restore-keys: |
#            ${{ runner.os }}-env-

      - name: Run Tests
        run: php artisan test

  stan:
    runs-on: ubuntu-latest

    needs: build

    steps:
#      - name: Checkout Repository
#        uses: actions/checkout@v2
#
#      - name: Set up PHP
#        uses: shivammathur/setup-php@v2
#        with:
#          php-version: 8.3
#
#      - name: Restore Cached vendor folder
#        uses: actions/cache@v2
#        with:
#          path: |
#            vendor
#          key: ${{ runner.os }}-php-${{ hashFiles('**/composer.lock') }}
#          restore-keys: |
#            ${{ runner.os }}-php-
#
#      - name: Restore Cached SQLite Database
#        uses: actions/cache@v2
#        with:
#          path: |
#            database.sqlite
#          key: ${{ runner.os }}-sqlite-${{ hashFiles('**/database.sqlite') }}
#          restore-keys: |
#            ${{ runner.os }}-sqlite-
#
#      - name: Restore Cached .env file
#        uses: actions/cache@v2
#        with:
#          path: |
#            .env
#          key: ${{ runner.os }}-env-${{ hashFiles('**/.env') }}
#          restore-keys: |
#            ${{ runner.os }}-env-

      - name: Run Stan
        run: vendor/bin/phpstan analyze app

  clean-up:
    runs-on: ubuntu-latest

    needs: ["test", "stan"]

    steps:
      - name: Remove Dev Dependencies
        run: composer install --no-interaction --prefer-dist --no-dev

#  deploy:
#    runs-on: ubuntu-latest
#
#    needs: clean-up
#
#    steps:
#      - name: Checkout Repository
#        uses: actions/checkout@v2
#
#      - uses: webfactory/ssh-agent@v0.8.0
#        with:
#          ssh-private-key: ${{ secrets.SSH_PRIVATE_KEY }}
